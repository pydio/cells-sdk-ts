/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TreeNode } from './TreeNode';
import {
    TreeNodeFromJSON,
    TreeNodeFromJSONTyped,
    TreeNodeToJSON,
    TreeNodeToJSONTyped,
} from './TreeNode';

/**
 * 
 * @export
 * @interface RestTemplateNode
 */
export interface RestTemplateNode {
    /**
     * 
     * @type {{ [key: string]: TreeNode; }}
     * @memberof RestTemplateNode
     */
    children?: { [key: string]: TreeNode; };
    /**
     * 
     * @type {TreeNode}
     * @memberof RestTemplateNode
     */
    node?: TreeNode;
}

/**
 * Check if a given object implements the RestTemplateNode interface.
 */
export function instanceOfRestTemplateNode(value: object): value is RestTemplateNode {
    return true;
}

export function RestTemplateNodeFromJSON(json: any): RestTemplateNode {
    return RestTemplateNodeFromJSONTyped(json, false);
}

export function RestTemplateNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestTemplateNode {
    if (json == null) {
        return json;
    }
    return {
        
        'children': json['Children'] == null ? undefined : (mapValues(json['Children'], TreeNodeFromJSON)),
        'node': json['Node'] == null ? undefined : TreeNodeFromJSON(json['Node']),
    };
}

export function RestTemplateNodeToJSON(json: any): RestTemplateNode {
    return RestTemplateNodeToJSONTyped(json, false);
}

export function RestTemplateNodeToJSONTyped(value?: RestTemplateNode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Children': value['children'] == null ? undefined : (mapValues(value['children'], TreeNodeToJSON)),
        'Node': TreeNodeToJSON(value['node']),
    };
}

