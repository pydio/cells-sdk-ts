/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceResourcePolicy } from './ServiceResourcePolicy';
import {
    ServiceResourcePolicyFromJSON,
    ServiceResourcePolicyFromJSONTyped,
    ServiceResourcePolicyToJSON,
    ServiceResourcePolicyToJSONTyped,
} from './ServiceResourcePolicy';

/**
 * Role represents a generic set of permissions that can be applied to any users or groups.
 * @export
 * @interface IdmRole
 */
export interface IdmRole {
    /**
     * 
     * @type {Array<string>}
     * @memberof IdmRole
     */
    autoApplies?: Array<string>;
    /**
     * Is used in a stack of roles, this one will always be applied last.
     * @type {boolean}
     * @memberof IdmRole
     */
    forceOverride?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdmRole
     */
    groupRole?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdmRole
     */
    isTeam?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IdmRole
     */
    label?: string;
    /**
     * 
     * @type {number}
     * @memberof IdmRole
     */
    lastUpdated?: number;
    /**
     * 
     * @type {Array<ServiceResourcePolicy>}
     * @memberof IdmRole
     */
    policies?: Array<ServiceResourcePolicy>;
    /**
     * 
     * @type {boolean}
     * @memberof IdmRole
     */
    policiesContextEditable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdmRole
     */
    userRole?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IdmRole
     */
    uuid?: string;
}

/**
 * Check if a given object implements the IdmRole interface.
 */
export function instanceOfIdmRole(value: object): value is IdmRole {
    return true;
}

export function IdmRoleFromJSON(json: any): IdmRole {
    return IdmRoleFromJSONTyped(json, false);
}

export function IdmRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdmRole {
    if (json == null) {
        return json;
    }
    return {
        
        'autoApplies': json['AutoApplies'] == null ? undefined : json['AutoApplies'],
        'forceOverride': json['ForceOverride'] == null ? undefined : json['ForceOverride'],
        'groupRole': json['GroupRole'] == null ? undefined : json['GroupRole'],
        'isTeam': json['IsTeam'] == null ? undefined : json['IsTeam'],
        'label': json['Label'] == null ? undefined : json['Label'],
        'lastUpdated': json['LastUpdated'] == null ? undefined : json['LastUpdated'],
        'policies': json['Policies'] == null ? undefined : ((json['Policies'] as Array<any>).map(ServiceResourcePolicyFromJSON)),
        'policiesContextEditable': json['PoliciesContextEditable'] == null ? undefined : json['PoliciesContextEditable'],
        'userRole': json['UserRole'] == null ? undefined : json['UserRole'],
        'uuid': json['Uuid'] == null ? undefined : json['Uuid'],
    };
}

export function IdmRoleToJSON(json: any): IdmRole {
    return IdmRoleToJSONTyped(json, false);
}

export function IdmRoleToJSONTyped(value?: IdmRole | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'AutoApplies': value['autoApplies'],
        'ForceOverride': value['forceOverride'],
        'GroupRole': value['groupRole'],
        'IsTeam': value['isTeam'],
        'Label': value['label'],
        'LastUpdated': value['lastUpdated'],
        'Policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(ServiceResourcePolicyToJSON)),
        'PoliciesContextEditable': value['policiesContextEditable'],
        'UserRole': value['userRole'],
        'Uuid': value['uuid'],
    };
}

