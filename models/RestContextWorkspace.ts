/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdmWorkspaceScope } from './IdmWorkspaceScope';
import {
    IdmWorkspaceScopeFromJSON,
    IdmWorkspaceScopeFromJSONTyped,
    IdmWorkspaceScopeToJSON,
    IdmWorkspaceScopeToJSONTyped,
} from './IdmWorkspaceScope';

/**
 * 
 * @export
 * @interface RestContextWorkspace
 */
export interface RestContextWorkspace {
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RestContextWorkspace
     */
    isRoot?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestContextWorkspace
     */
    isVirtualRoot?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    permissions?: string;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    quota?: string;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    quotaUsage?: string;
    /**
     * 
     * @type {IdmWorkspaceScope}
     * @memberof RestContextWorkspace
     */
    scope?: IdmWorkspaceScope;
    /**
     * 
     * @type {boolean}
     * @memberof RestContextWorkspace
     */
    skipRecycle?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    slug?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RestContextWorkspace
     */
    syncable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestContextWorkspace
     */
    uuid?: string;
}



/**
 * Check if a given object implements the RestContextWorkspace interface.
 */
export function instanceOfRestContextWorkspace(value: object): value is RestContextWorkspace {
    return true;
}

export function RestContextWorkspaceFromJSON(json: any): RestContextWorkspace {
    return RestContextWorkspaceFromJSONTyped(json, false);
}

export function RestContextWorkspaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestContextWorkspace {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['Description'] == null ? undefined : json['Description'],
        'isRoot': json['IsRoot'] == null ? undefined : json['IsRoot'],
        'isVirtualRoot': json['IsVirtualRoot'] == null ? undefined : json['IsVirtualRoot'],
        'label': json['Label'] == null ? undefined : json['Label'],
        'permissions': json['Permissions'] == null ? undefined : json['Permissions'],
        'quota': json['Quota'] == null ? undefined : json['Quota'],
        'quotaUsage': json['QuotaUsage'] == null ? undefined : json['QuotaUsage'],
        'scope': json['Scope'] == null ? undefined : IdmWorkspaceScopeFromJSON(json['Scope']),
        'skipRecycle': json['SkipRecycle'] == null ? undefined : json['SkipRecycle'],
        'slug': json['Slug'] == null ? undefined : json['Slug'],
        'syncable': json['Syncable'] == null ? undefined : json['Syncable'],
        'uuid': json['Uuid'] == null ? undefined : json['Uuid'],
    };
}

export function RestContextWorkspaceToJSON(json: any): RestContextWorkspace {
    return RestContextWorkspaceToJSONTyped(json, false);
}

export function RestContextWorkspaceToJSONTyped(value?: RestContextWorkspace | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Description': value['description'],
        'IsRoot': value['isRoot'],
        'IsVirtualRoot': value['isVirtualRoot'],
        'Label': value['label'],
        'Permissions': value['permissions'],
        'Quota': value['quota'],
        'QuotaUsage': value['quotaUsage'],
        'Scope': IdmWorkspaceScopeToJSON(value['scope']),
        'SkipRecycle': value['skipRecycle'],
        'Slug': value['slug'],
        'Syncable': value['syncable'],
        'Uuid': value['uuid'],
    };
}

