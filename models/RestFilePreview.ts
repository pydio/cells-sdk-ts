/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RestFilePreview
 */
export interface RestFilePreview {
    /**
     * 
     * @type {string}
     * @memberof RestFilePreview
     */
    contentType?: string;
    /**
     * 
     * @type {number}
     * @memberof RestFilePreview
     */
    dimension?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RestFilePreview
     */
    processing?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestFilePreview
     */
    url?: string;
}

/**
 * Check if a given object implements the RestFilePreview interface.
 */
export function instanceOfRestFilePreview(value: object): value is RestFilePreview {
    return true;
}

export function RestFilePreviewFromJSON(json: any): RestFilePreview {
    return RestFilePreviewFromJSONTyped(json, false);
}

export function RestFilePreviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestFilePreview {
    if (json == null) {
        return json;
    }
    return {
        
        'contentType': json['ContentType'] == null ? undefined : json['ContentType'],
        'dimension': json['Dimension'] == null ? undefined : json['Dimension'],
        'processing': json['Processing'] == null ? undefined : json['Processing'],
        'url': json['Url'] == null ? undefined : json['Url'],
    };
}

export function RestFilePreviewToJSON(json: any): RestFilePreview {
    return RestFilePreviewToJSONTyped(json, false);
}

export function RestFilePreviewToJSONTyped(value?: RestFilePreview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ContentType': value['contentType'],
        'Dimension': value['dimension'],
        'Processing': value['processing'],
        'Url': value['url'],
    };
}

