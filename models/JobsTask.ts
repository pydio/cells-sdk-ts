/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobsTaskStatus } from './JobsTaskStatus';
import {
    JobsTaskStatusFromJSON,
    JobsTaskStatusFromJSONTyped,
    JobsTaskStatusToJSON,
    JobsTaskStatusToJSONTyped,
} from './JobsTaskStatus';
import type { JobsActionLog } from './JobsActionLog';
import {
    JobsActionLogFromJSON,
    JobsActionLogFromJSONTyped,
    JobsActionLogToJSON,
    JobsActionLogToJSONTyped,
} from './JobsActionLog';

/**
 * 
 * @export
 * @interface JobsTask
 */
export interface JobsTask {
    /**
     * 
     * @type {Array<JobsActionLog>}
     * @memberof JobsTask
     */
    actionsLogs?: Array<JobsActionLog>;
    /**
     * 
     * @type {boolean}
     * @memberof JobsTask
     */
    canPause?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof JobsTask
     */
    canStop?: boolean;
    /**
     * 
     * @type {number}
     * @memberof JobsTask
     */
    endTime?: number;
    /**
     * 
     * @type {boolean}
     * @memberof JobsTask
     */
    hasProgress?: boolean;
    /**
     * 
     * @type {string}
     * @memberof JobsTask
     */
    iD?: string;
    /**
     * 
     * @type {string}
     * @memberof JobsTask
     */
    jobID?: string;
    /**
     * 
     * @type {number}
     * @memberof JobsTask
     */
    progress?: number;
    /**
     * 
     * @type {number}
     * @memberof JobsTask
     */
    startTime?: number;
    /**
     * 
     * @type {JobsTaskStatus}
     * @memberof JobsTask
     */
    status?: JobsTaskStatus;
    /**
     * 
     * @type {string}
     * @memberof JobsTask
     */
    statusMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof JobsTask
     */
    triggerOwner?: string;
}



/**
 * Check if a given object implements the JobsTask interface.
 */
export function instanceOfJobsTask(value: object): value is JobsTask {
    return true;
}

export function JobsTaskFromJSON(json: any): JobsTask {
    return JobsTaskFromJSONTyped(json, false);
}

export function JobsTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobsTask {
    if (json == null) {
        return json;
    }
    return {
        
        'actionsLogs': json['ActionsLogs'] == null ? undefined : ((json['ActionsLogs'] as Array<any>).map(JobsActionLogFromJSON)),
        'canPause': json['CanPause'] == null ? undefined : json['CanPause'],
        'canStop': json['CanStop'] == null ? undefined : json['CanStop'],
        'endTime': json['EndTime'] == null ? undefined : json['EndTime'],
        'hasProgress': json['HasProgress'] == null ? undefined : json['HasProgress'],
        'iD': json['ID'] == null ? undefined : json['ID'],
        'jobID': json['JobID'] == null ? undefined : json['JobID'],
        'progress': json['Progress'] == null ? undefined : json['Progress'],
        'startTime': json['StartTime'] == null ? undefined : json['StartTime'],
        'status': json['Status'] == null ? undefined : JobsTaskStatusFromJSON(json['Status']),
        'statusMessage': json['StatusMessage'] == null ? undefined : json['StatusMessage'],
        'triggerOwner': json['TriggerOwner'] == null ? undefined : json['TriggerOwner'],
    };
}

export function JobsTaskToJSON(json: any): JobsTask {
    return JobsTaskToJSONTyped(json, false);
}

export function JobsTaskToJSONTyped(value?: JobsTask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ActionsLogs': value['actionsLogs'] == null ? undefined : ((value['actionsLogs'] as Array<any>).map(JobsActionLogToJSON)),
        'CanPause': value['canPause'],
        'CanStop': value['canStop'],
        'EndTime': value['endTime'],
        'HasProgress': value['hasProgress'],
        'ID': value['iD'],
        'JobID': value['jobID'],
        'Progress': value['progress'],
        'StartTime': value['startTime'],
        'Status': JobsTaskStatusToJSON(value['status']),
        'StatusMessage': value['statusMessage'],
        'TriggerOwner': value['triggerOwner'],
    };
}

