/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RestTemplateNode } from './RestTemplateNode';
import {
    RestTemplateNodeFromJSON,
    RestTemplateNodeFromJSONTyped,
    RestTemplateNodeToJSON,
    RestTemplateNodeToJSONTyped,
} from './RestTemplateNode';
import type { ServiceResourcePolicy } from './ServiceResourcePolicy';
import {
    ServiceResourcePolicyFromJSON,
    ServiceResourcePolicyFromJSONTyped,
    ServiceResourcePolicyToJSON,
    ServiceResourcePolicyToJSONTyped,
} from './ServiceResourcePolicy';

/**
 * 
 * @export
 * @interface RestTemplate
 */
export interface RestTemplate {
    /**
     * 
     * @type {boolean}
     * @memberof RestTemplate
     */
    editable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestTemplate
     */
    label?: string;
    /**
     * 
     * @type {RestTemplateNode}
     * @memberof RestTemplate
     */
    node?: RestTemplateNode;
    /**
     * 
     * @type {Array<ServiceResourcePolicy>}
     * @memberof RestTemplate
     */
    policies?: Array<ServiceResourcePolicy>;
    /**
     * 
     * @type {string}
     * @memberof RestTemplate
     */
    uUID?: string;
}

/**
 * Check if a given object implements the RestTemplate interface.
 */
export function instanceOfRestTemplate(value: object): value is RestTemplate {
    return true;
}

export function RestTemplateFromJSON(json: any): RestTemplate {
    return RestTemplateFromJSONTyped(json, false);
}

export function RestTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'editable': json['Editable'] == null ? undefined : json['Editable'],
        'label': json['Label'] == null ? undefined : json['Label'],
        'node': json['Node'] == null ? undefined : RestTemplateNodeFromJSON(json['Node']),
        'policies': json['Policies'] == null ? undefined : ((json['Policies'] as Array<any>).map(ServiceResourcePolicyFromJSON)),
        'uUID': json['UUID'] == null ? undefined : json['UUID'],
    };
}

export function RestTemplateToJSON(json: any): RestTemplate {
    return RestTemplateToJSONTyped(json, false);
}

export function RestTemplateToJSONTyped(value?: RestTemplate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Editable': value['editable'],
        'Label': value['label'],
        'Node': RestTemplateNodeToJSON(value['node']),
        'Policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(ServiceResourcePolicyToJSON)),
        'UUID': value['uUID'],
    };
}

