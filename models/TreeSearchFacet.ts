/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TreeSearchFacet
 */
export interface TreeSearchFacet {
    /**
     * 
     * @type {number}
     * @memberof TreeSearchFacet
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeSearchFacet
     */
    end?: number;
    /**
     * 
     * @type {string}
     * @memberof TreeSearchFacet
     */
    fieldName?: string;
    /**
     * 
     * @type {string}
     * @memberof TreeSearchFacet
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof TreeSearchFacet
     */
    max?: string;
    /**
     * 
     * @type {string}
     * @memberof TreeSearchFacet
     */
    min?: string;
    /**
     * 
     * @type {number}
     * @memberof TreeSearchFacet
     */
    start?: number;
    /**
     * 
     * @type {string}
     * @memberof TreeSearchFacet
     */
    term?: string;
}

/**
 * Check if a given object implements the TreeSearchFacet interface.
 */
export function instanceOfTreeSearchFacet(value: object): value is TreeSearchFacet {
    return true;
}

export function TreeSearchFacetFromJSON(json: any): TreeSearchFacet {
    return TreeSearchFacetFromJSONTyped(json, false);
}

export function TreeSearchFacetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TreeSearchFacet {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['Count'] == null ? undefined : json['Count'],
        'end': json['End'] == null ? undefined : json['End'],
        'fieldName': json['FieldName'] == null ? undefined : json['FieldName'],
        'label': json['Label'] == null ? undefined : json['Label'],
        'max': json['Max'] == null ? undefined : json['Max'],
        'min': json['Min'] == null ? undefined : json['Min'],
        'start': json['Start'] == null ? undefined : json['Start'],
        'term': json['Term'] == null ? undefined : json['Term'],
    };
}

export function TreeSearchFacetToJSON(json: any): TreeSearchFacet {
    return TreeSearchFacetToJSONTyped(json, false);
}

export function TreeSearchFacetToJSONTyped(value?: TreeSearchFacet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Count': value['count'],
        'End': value['end'],
        'FieldName': value['fieldName'],
        'Label': value['label'],
        'Max': value['max'],
        'Min': value['min'],
        'Start': value['start'],
        'Term': value['term'],
    };
}

