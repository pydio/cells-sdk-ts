/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdmRole } from './IdmRole';
import {
    IdmRoleFromJSON,
    IdmRoleFromJSONTyped,
    IdmRoleToJSON,
    IdmRoleToJSONTyped,
} from './IdmRole';
import type { ServiceResourcePolicy } from './ServiceResourcePolicy';
import {
    ServiceResourcePolicyFromJSON,
    ServiceResourcePolicyFromJSONTyped,
    ServiceResourcePolicyToJSON,
    ServiceResourcePolicyToJSONTyped,
} from './ServiceResourcePolicy';

/**
 * 
 * @export
 * @interface IdmUser
 */
export interface IdmUser {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof IdmUser
     */
    attributes?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    groupLabel?: string;
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    groupPath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IdmUser
     */
    isGroup?: boolean;
    /**
     * 
     * @type {number}
     * @memberof IdmUser
     */
    lastConnected?: number;
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    oldPassword?: string;
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    password?: string;
    /**
     * 
     * @type {Array<ServiceResourcePolicy>}
     * @memberof IdmUser
     */
    policies?: Array<ServiceResourcePolicy>;
    /**
     * Context-resolved to quickly check if user is editable or not.
     * @type {boolean}
     * @memberof IdmUser
     */
    policiesContextEditable?: boolean;
    /**
     * 
     * @type {Array<IdmRole>}
     * @memberof IdmUser
     */
    roles?: Array<IdmRole>;
    /**
     * 
     * @type {string}
     * @memberof IdmUser
     */
    uuid?: string;
}

/**
 * Check if a given object implements the IdmUser interface.
 */
export function instanceOfIdmUser(value: object): value is IdmUser {
    return true;
}

export function IdmUserFromJSON(json: any): IdmUser {
    return IdmUserFromJSONTyped(json, false);
}

export function IdmUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdmUser {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['Attributes'] == null ? undefined : json['Attributes'],
        'groupLabel': json['GroupLabel'] == null ? undefined : json['GroupLabel'],
        'groupPath': json['GroupPath'] == null ? undefined : json['GroupPath'],
        'isGroup': json['IsGroup'] == null ? undefined : json['IsGroup'],
        'lastConnected': json['LastConnected'] == null ? undefined : json['LastConnected'],
        'login': json['Login'] == null ? undefined : json['Login'],
        'oldPassword': json['OldPassword'] == null ? undefined : json['OldPassword'],
        'password': json['Password'] == null ? undefined : json['Password'],
        'policies': json['Policies'] == null ? undefined : ((json['Policies'] as Array<any>).map(ServiceResourcePolicyFromJSON)),
        'policiesContextEditable': json['PoliciesContextEditable'] == null ? undefined : json['PoliciesContextEditable'],
        'roles': json['Roles'] == null ? undefined : ((json['Roles'] as Array<any>).map(IdmRoleFromJSON)),
        'uuid': json['Uuid'] == null ? undefined : json['Uuid'],
    };
}

export function IdmUserToJSON(json: any): IdmUser {
    return IdmUserToJSONTyped(json, false);
}

export function IdmUserToJSONTyped(value?: IdmUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Attributes': value['attributes'],
        'GroupLabel': value['groupLabel'],
        'GroupPath': value['groupPath'],
        'IsGroup': value['isGroup'],
        'LastConnected': value['lastConnected'],
        'Login': value['login'],
        'OldPassword': value['oldPassword'],
        'Password': value['password'],
        'Policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(ServiceResourcePolicyToJSON)),
        'PoliciesContextEditable': value['policiesContextEditable'],
        'Roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(IdmRoleToJSON)),
        'Uuid': value['uuid'],
    };
}

