/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ObjectDataSource } from './ObjectDataSource';
import {
    ObjectDataSourceFromJSON,
    ObjectDataSourceFromJSONTyped,
    ObjectDataSourceToJSON,
    ObjectDataSourceToJSONTyped,
} from './ObjectDataSource';
import type { JobsActionOutput } from './JobsActionOutput';
import {
    JobsActionOutputFromJSON,
    JobsActionOutputFromJSONTyped,
    JobsActionOutputToJSON,
    JobsActionOutputToJSONTyped,
} from './JobsActionOutput';
import type { TreeNode } from './TreeNode';
import {
    TreeNodeFromJSON,
    TreeNodeFromJSONTyped,
    TreeNodeToJSON,
    TreeNodeToJSONTyped,
} from './TreeNode';
import type { IdmRole } from './IdmRole';
import {
    IdmRoleFromJSON,
    IdmRoleFromJSONTyped,
    IdmRoleToJSON,
    IdmRoleToJSONTyped,
} from './IdmRole';
import type { ActivityObject } from './ActivityObject';
import {
    ActivityObjectFromJSON,
    ActivityObjectFromJSONTyped,
    ActivityObjectToJSON,
    ActivityObjectToJSONTyped,
} from './ActivityObject';
import type { IdmACL } from './IdmACL';
import {
    IdmACLFromJSON,
    IdmACLFromJSONTyped,
    IdmACLToJSON,
    IdmACLToJSONTyped,
} from './IdmACL';
import type { IdmUser } from './IdmUser';
import {
    IdmUserFromJSON,
    IdmUserFromJSONTyped,
    IdmUserToJSON,
    IdmUserToJSONTyped,
} from './IdmUser';
import type { IdmWorkspace } from './IdmWorkspace';
import {
    IdmWorkspaceFromJSON,
    IdmWorkspaceFromJSONTyped,
    IdmWorkspaceToJSON,
    IdmWorkspaceToJSONTyped,
} from './IdmWorkspace';
import type { ProtobufAny } from './ProtobufAny';
import {
    ProtobufAnyFromJSON,
    ProtobufAnyFromJSONTyped,
    ProtobufAnyToJSON,
    ProtobufAnyToJSONTyped,
} from './ProtobufAny';

/**
 * 
 * @export
 * @interface JobsActionMessage
 */
export interface JobsActionMessage {
    /**
     * 
     * @type {Array<IdmACL>}
     * @memberof JobsActionMessage
     */
    acls?: Array<IdmACL>;
    /**
     * 
     * @type {Array<ActivityObject>}
     * @memberof JobsActionMessage
     */
    activities?: Array<ActivityObject>;
    /**
     * 
     * @type {Array<ObjectDataSource>}
     * @memberof JobsActionMessage
     */
    dataSources?: Array<ObjectDataSource>;
    /**
     * 
     * @type {ProtobufAny}
     * @memberof JobsActionMessage
     */
    event?: ProtobufAny;
    /**
     * 
     * @type {Array<TreeNode>}
     * @memberof JobsActionMessage
     */
    nodes?: Array<TreeNode>;
    /**
     * 
     * @type {Array<JobsActionOutput>}
     * @memberof JobsActionMessage
     */
    outputChain?: Array<JobsActionOutput>;
    /**
     * 
     * @type {Array<IdmRole>}
     * @memberof JobsActionMessage
     */
    roles?: Array<IdmRole>;
    /**
     * 
     * @type {Array<IdmUser>}
     * @memberof JobsActionMessage
     */
    users?: Array<IdmUser>;
    /**
     * 
     * @type {Array<IdmWorkspace>}
     * @memberof JobsActionMessage
     */
    workspaces?: Array<IdmWorkspace>;
}

/**
 * Check if a given object implements the JobsActionMessage interface.
 */
export function instanceOfJobsActionMessage(value: object): value is JobsActionMessage {
    return true;
}

export function JobsActionMessageFromJSON(json: any): JobsActionMessage {
    return JobsActionMessageFromJSONTyped(json, false);
}

export function JobsActionMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobsActionMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'acls': json['Acls'] == null ? undefined : ((json['Acls'] as Array<any>).map(IdmACLFromJSON)),
        'activities': json['Activities'] == null ? undefined : ((json['Activities'] as Array<any>).map(ActivityObjectFromJSON)),
        'dataSources': json['DataSources'] == null ? undefined : ((json['DataSources'] as Array<any>).map(ObjectDataSourceFromJSON)),
        'event': json['Event'] == null ? undefined : ProtobufAnyFromJSON(json['Event']),
        'nodes': json['Nodes'] == null ? undefined : ((json['Nodes'] as Array<any>).map(TreeNodeFromJSON)),
        'outputChain': json['OutputChain'] == null ? undefined : ((json['OutputChain'] as Array<any>).map(JobsActionOutputFromJSON)),
        'roles': json['Roles'] == null ? undefined : ((json['Roles'] as Array<any>).map(IdmRoleFromJSON)),
        'users': json['Users'] == null ? undefined : ((json['Users'] as Array<any>).map(IdmUserFromJSON)),
        'workspaces': json['Workspaces'] == null ? undefined : ((json['Workspaces'] as Array<any>).map(IdmWorkspaceFromJSON)),
    };
}

export function JobsActionMessageToJSON(json: any): JobsActionMessage {
    return JobsActionMessageToJSONTyped(json, false);
}

export function JobsActionMessageToJSONTyped(value?: JobsActionMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Acls': value['acls'] == null ? undefined : ((value['acls'] as Array<any>).map(IdmACLToJSON)),
        'Activities': value['activities'] == null ? undefined : ((value['activities'] as Array<any>).map(ActivityObjectToJSON)),
        'DataSources': value['dataSources'] == null ? undefined : ((value['dataSources'] as Array<any>).map(ObjectDataSourceToJSON)),
        'Event': ProtobufAnyToJSON(value['event']),
        'Nodes': value['nodes'] == null ? undefined : ((value['nodes'] as Array<any>).map(TreeNodeToJSON)),
        'OutputChain': value['outputChain'] == null ? undefined : ((value['outputChain'] as Array<any>).map(JobsActionOutputToJSON)),
        'Roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(IdmRoleToJSON)),
        'Users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(IdmUserToJSON)),
        'Workspaces': value['workspaces'] == null ? undefined : ((value['workspaces'] as Array<any>).map(IdmWorkspaceToJSON)),
    };
}

