/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobsDataSelector } from './JobsDataSelector';
import {
    JobsDataSelectorFromJSON,
    JobsDataSelectorFromJSONTyped,
    JobsDataSelectorToJSON,
    JobsDataSelectorToJSONTyped,
} from './JobsDataSelector';
import type { JobsDataSourceSelector } from './JobsDataSourceSelector';
import {
    JobsDataSourceSelectorFromJSON,
    JobsDataSourceSelectorFromJSONTyped,
    JobsDataSourceSelectorToJSON,
    JobsDataSourceSelectorToJSONTyped,
} from './JobsDataSourceSelector';
import type { JobsNodesSelector } from './JobsNodesSelector';
import {
    JobsNodesSelectorFromJSON,
    JobsNodesSelectorFromJSONTyped,
    JobsNodesSelectorToJSON,
    JobsNodesSelectorToJSONTyped,
} from './JobsNodesSelector';
import type { JobsUsersSelector } from './JobsUsersSelector';
import {
    JobsUsersSelectorFromJSON,
    JobsUsersSelectorFromJSONTyped,
    JobsUsersSelectorToJSON,
    JobsUsersSelectorToJSONTyped,
} from './JobsUsersSelector';
import type { JobsContextMetaFilter } from './JobsContextMetaFilter';
import {
    JobsContextMetaFilterFromJSON,
    JobsContextMetaFilterFromJSONTyped,
    JobsContextMetaFilterToJSON,
    JobsContextMetaFilterToJSONTyped,
} from './JobsContextMetaFilter';
import type { JobsTriggerFilter } from './JobsTriggerFilter';
import {
    JobsTriggerFilterFromJSON,
    JobsTriggerFilterFromJSONTyped,
    JobsTriggerFilterToJSON,
    JobsTriggerFilterToJSONTyped,
} from './JobsTriggerFilter';
import type { JobsIdmSelector } from './JobsIdmSelector';
import {
    JobsIdmSelectorFromJSON,
    JobsIdmSelectorFromJSONTyped,
    JobsIdmSelectorToJSON,
    JobsIdmSelectorToJSONTyped,
} from './JobsIdmSelector';
import type { JobsActionOutputFilter } from './JobsActionOutputFilter';
import {
    JobsActionOutputFilterFromJSON,
    JobsActionOutputFilterFromJSONTyped,
    JobsActionOutputFilterToJSON,
    JobsActionOutputFilterToJSONTyped,
} from './JobsActionOutputFilter';

/**
 * 
 * @export
 * @interface JobsAction
 */
export interface JobsAction {
    /**
     * 
     * @type {JobsActionOutputFilter}
     * @memberof JobsAction
     */
    actionOutputFilter?: JobsActionOutputFilter;
    /**
     * 
     * @type {boolean}
     * @memberof JobsAction
     */
    breakAfter?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof JobsAction
     */
    bypass?: boolean;
    /**
     * 
     * @type {Array<JobsAction>}
     * @memberof JobsAction
     */
    chainedActions?: Array<JobsAction>;
    /**
     * 
     * @type {JobsContextMetaFilter}
     * @memberof JobsAction
     */
    contextMetaFilter?: JobsContextMetaFilter;
    /**
     * 
     * @type {JobsDataSelector}
     * @memberof JobsAction
     */
    dataFilter?: JobsDataSelector;
    /**
     * 
     * @type {JobsDataSelector}
     * @memberof JobsAction
     */
    dataSelector?: JobsDataSelector;
    /**
     * 
     * @type {JobsDataSourceSelector}
     * @memberof JobsAction
     */
    dataSourceFilter?: JobsDataSourceSelector;
    /**
     * 
     * @type {JobsDataSourceSelector}
     * @memberof JobsAction
     */
    dataSourceSelector?: JobsDataSourceSelector;
    /**
     * 
     * @type {string}
     * @memberof JobsAction
     */
    description?: string;
    /**
     * 
     * @type {Array<JobsAction>}
     * @memberof JobsAction
     */
    failedFilterActions?: Array<JobsAction>;
    /**
     * 
     * @type {string}
     * @memberof JobsAction
     */
    iD?: string;
    /**
     * 
     * @type {JobsIdmSelector}
     * @memberof JobsAction
     */
    idmFilter?: JobsIdmSelector;
    /**
     * 
     * @type {JobsIdmSelector}
     * @memberof JobsAction
     */
    idmSelector?: JobsIdmSelector;
    /**
     * 
     * @type {string}
     * @memberof JobsAction
     */
    label?: string;
    /**
     * 
     * @type {JobsAction}
     * @memberof JobsAction
     */
    mergeAction?: JobsAction;
    /**
     * 
     * @type {JobsNodesSelector}
     * @memberof JobsAction
     */
    nodesFilter?: JobsNodesSelector;
    /**
     * 
     * @type {JobsNodesSelector}
     * @memberof JobsAction
     */
    nodesSelector?: JobsNodesSelector;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof JobsAction
     */
    parameters?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof JobsAction
     */
    timeout?: string;
    /**
     * 
     * @type {JobsTriggerFilter}
     * @memberof JobsAction
     */
    triggerFilter?: JobsTriggerFilter;
    /**
     * 
     * @type {JobsUsersSelector}
     * @memberof JobsAction
     */
    usersFilter?: JobsUsersSelector;
    /**
     * 
     * @type {JobsUsersSelector}
     * @memberof JobsAction
     */
    usersSelector?: JobsUsersSelector;
}

/**
 * Check if a given object implements the JobsAction interface.
 */
export function instanceOfJobsAction(value: object): value is JobsAction {
    return true;
}

export function JobsActionFromJSON(json: any): JobsAction {
    return JobsActionFromJSONTyped(json, false);
}

export function JobsActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobsAction {
    if (json == null) {
        return json;
    }
    return {
        
        'actionOutputFilter': json['ActionOutputFilter'] == null ? undefined : JobsActionOutputFilterFromJSON(json['ActionOutputFilter']),
        'breakAfter': json['BreakAfter'] == null ? undefined : json['BreakAfter'],
        'bypass': json['Bypass'] == null ? undefined : json['Bypass'],
        'chainedActions': json['ChainedActions'] == null ? undefined : ((json['ChainedActions'] as Array<any>).map(JobsActionFromJSON)),
        'contextMetaFilter': json['ContextMetaFilter'] == null ? undefined : JobsContextMetaFilterFromJSON(json['ContextMetaFilter']),
        'dataFilter': json['DataFilter'] == null ? undefined : JobsDataSelectorFromJSON(json['DataFilter']),
        'dataSelector': json['DataSelector'] == null ? undefined : JobsDataSelectorFromJSON(json['DataSelector']),
        'dataSourceFilter': json['DataSourceFilter'] == null ? undefined : JobsDataSourceSelectorFromJSON(json['DataSourceFilter']),
        'dataSourceSelector': json['DataSourceSelector'] == null ? undefined : JobsDataSourceSelectorFromJSON(json['DataSourceSelector']),
        'description': json['Description'] == null ? undefined : json['Description'],
        'failedFilterActions': json['FailedFilterActions'] == null ? undefined : ((json['FailedFilterActions'] as Array<any>).map(JobsActionFromJSON)),
        'iD': json['ID'] == null ? undefined : json['ID'],
        'idmFilter': json['IdmFilter'] == null ? undefined : JobsIdmSelectorFromJSON(json['IdmFilter']),
        'idmSelector': json['IdmSelector'] == null ? undefined : JobsIdmSelectorFromJSON(json['IdmSelector']),
        'label': json['Label'] == null ? undefined : json['Label'],
        'mergeAction': json['MergeAction'] == null ? undefined : JobsActionFromJSON(json['MergeAction']),
        'nodesFilter': json['NodesFilter'] == null ? undefined : JobsNodesSelectorFromJSON(json['NodesFilter']),
        'nodesSelector': json['NodesSelector'] == null ? undefined : JobsNodesSelectorFromJSON(json['NodesSelector']),
        'parameters': json['Parameters'] == null ? undefined : json['Parameters'],
        'timeout': json['Timeout'] == null ? undefined : json['Timeout'],
        'triggerFilter': json['TriggerFilter'] == null ? undefined : JobsTriggerFilterFromJSON(json['TriggerFilter']),
        'usersFilter': json['UsersFilter'] == null ? undefined : JobsUsersSelectorFromJSON(json['UsersFilter']),
        'usersSelector': json['UsersSelector'] == null ? undefined : JobsUsersSelectorFromJSON(json['UsersSelector']),
    };
}

export function JobsActionToJSON(json: any): JobsAction {
    return JobsActionToJSONTyped(json, false);
}

export function JobsActionToJSONTyped(value?: JobsAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ActionOutputFilter': JobsActionOutputFilterToJSON(value['actionOutputFilter']),
        'BreakAfter': value['breakAfter'],
        'Bypass': value['bypass'],
        'ChainedActions': value['chainedActions'] == null ? undefined : ((value['chainedActions'] as Array<any>).map(JobsActionToJSON)),
        'ContextMetaFilter': JobsContextMetaFilterToJSON(value['contextMetaFilter']),
        'DataFilter': JobsDataSelectorToJSON(value['dataFilter']),
        'DataSelector': JobsDataSelectorToJSON(value['dataSelector']),
        'DataSourceFilter': JobsDataSourceSelectorToJSON(value['dataSourceFilter']),
        'DataSourceSelector': JobsDataSourceSelectorToJSON(value['dataSourceSelector']),
        'Description': value['description'],
        'FailedFilterActions': value['failedFilterActions'] == null ? undefined : ((value['failedFilterActions'] as Array<any>).map(JobsActionToJSON)),
        'ID': value['iD'],
        'IdmFilter': JobsIdmSelectorToJSON(value['idmFilter']),
        'IdmSelector': JobsIdmSelectorToJSON(value['idmSelector']),
        'Label': value['label'],
        'MergeAction': JobsActionToJSON(value['mergeAction']),
        'NodesFilter': JobsNodesSelectorToJSON(value['nodesFilter']),
        'NodesSelector': JobsNodesSelectorToJSON(value['nodesSelector']),
        'Parameters': value['parameters'],
        'Timeout': value['timeout'],
        'TriggerFilter': JobsTriggerFilterToJSON(value['triggerFilter']),
        'UsersFilter': JobsUsersSelectorToJSON(value['usersFilter']),
        'UsersSelector': JobsUsersSelectorToJSON(value['usersSelector']),
    };
}

