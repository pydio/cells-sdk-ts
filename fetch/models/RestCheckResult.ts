/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RestNodeLocator } from './RestNodeLocator';
import {
    RestNodeLocatorFromJSON,
    RestNodeLocatorFromJSONTyped,
    RestNodeLocatorToJSON,
    RestNodeLocatorToJSONTyped,
} from './RestNodeLocator';
import type { RestNode } from './RestNode';
import {
    RestNodeFromJSON,
    RestNodeFromJSONTyped,
    RestNodeToJSON,
    RestNodeToJSONTyped,
} from './RestNode';

/**
 * 
 * @export
 * @interface RestCheckResult
 */
export interface RestCheckResult {
    /**
     * 
     * @type {boolean}
     * @memberof RestCheckResult
     */
    _exists?: boolean;
    /**
     * 
     * @type {RestNodeLocator}
     * @memberof RestCheckResult
     */
    inputLocator?: RestNodeLocator;
    /**
     * 
     * @type {string}
     * @memberof RestCheckResult
     */
    nextPath?: string;
    /**
     * 
     * @type {RestNode}
     * @memberof RestCheckResult
     */
    node?: RestNode;
}

/**
 * Check if a given object implements the RestCheckResult interface.
 */
export function instanceOfRestCheckResult(value: object): value is RestCheckResult {
    return true;
}

export function RestCheckResultFromJSON(json: any): RestCheckResult {
    return RestCheckResultFromJSONTyped(json, false);
}

export function RestCheckResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestCheckResult {
    if (json == null) {
        return json;
    }
    return {
        
        '_exists': json['Exists'] == null ? undefined : json['Exists'],
        'inputLocator': json['InputLocator'] == null ? undefined : RestNodeLocatorFromJSON(json['InputLocator']),
        'nextPath': json['NextPath'] == null ? undefined : json['NextPath'],
        'node': json['Node'] == null ? undefined : RestNodeFromJSON(json['Node']),
    };
}

export function RestCheckResultToJSON(json: any): RestCheckResult {
    return RestCheckResultToJSONTyped(json, false);
}

export function RestCheckResultToJSONTyped(value?: RestCheckResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Exists': value['_exists'],
        'InputLocator': RestNodeLocatorToJSON(value['inputLocator']),
        'NextPath': value['nextPath'],
        'Node': RestNodeToJSON(value['node']),
    };
}

