/* tslint:disable */
/* eslint-disable */
/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceOperationType } from './ServiceOperationType';
import {
    ServiceOperationTypeFromJSON,
    ServiceOperationTypeFromJSONTyped,
    ServiceOperationTypeToJSON,
    ServiceOperationTypeToJSONTyped,
} from './ServiceOperationType';
import type { ServiceResourcePolicyQuery } from './ServiceResourcePolicyQuery';
import {
    ServiceResourcePolicyQueryFromJSON,
    ServiceResourcePolicyQueryFromJSONTyped,
    ServiceResourcePolicyQueryToJSON,
    ServiceResourcePolicyQueryToJSONTyped,
} from './ServiceResourcePolicyQuery';
import type { ProtobufAny } from './ProtobufAny';
import {
    ProtobufAnyFromJSON,
    ProtobufAnyFromJSONTyped,
    ProtobufAnyToJSON,
    ProtobufAnyToJSONTyped,
} from './ProtobufAny';

/**
 * 
 * @export
 * @interface ServiceQuery
 */
export interface ServiceQuery {
    /**
     * 
     * @type {string}
     * @memberof ServiceQuery
     */
    limit?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceQuery
     */
    offset?: string;
    /**
     * 
     * @type {ServiceOperationType}
     * @memberof ServiceQuery
     */
    operation?: ServiceOperationType;
    /**
     * 
     * @type {ServiceResourcePolicyQuery}
     * @memberof ServiceQuery
     */
    resourcePolicyQuery?: ServiceResourcePolicyQuery;
    /**
     * 
     * @type {boolean}
     * @memberof ServiceQuery
     */
    sortDesc?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServiceQuery
     */
    sortField?: string;
    /**
     * 
     * @type {Array<ProtobufAny>}
     * @memberof ServiceQuery
     */
    subQueries?: Array<ProtobufAny>;
    /**
     * 
     * @type {number}
     * @memberof ServiceQuery
     */
    groupBy?: number;
}



/**
 * Check if a given object implements the ServiceQuery interface.
 */
export function instanceOfServiceQuery(value: object): value is ServiceQuery {
    return true;
}

export function ServiceQueryFromJSON(json: any): ServiceQuery {
    return ServiceQueryFromJSONTyped(json, false);
}

export function ServiceQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'limit': json['Limit'] == null ? undefined : json['Limit'],
        'offset': json['Offset'] == null ? undefined : json['Offset'],
        'operation': json['Operation'] == null ? undefined : ServiceOperationTypeFromJSON(json['Operation']),
        'resourcePolicyQuery': json['ResourcePolicyQuery'] == null ? undefined : ServiceResourcePolicyQueryFromJSON(json['ResourcePolicyQuery']),
        'sortDesc': json['SortDesc'] == null ? undefined : json['SortDesc'],
        'sortField': json['SortField'] == null ? undefined : json['SortField'],
        'subQueries': json['SubQueries'] == null ? undefined : ((json['SubQueries'] as Array<any>).map(ProtobufAnyFromJSON)),
        'groupBy': json['groupBy'] == null ? undefined : json['groupBy'],
    };
}

export function ServiceQueryToJSON(json: any): ServiceQuery {
    return ServiceQueryToJSONTyped(json, false);
}

export function ServiceQueryToJSONTyped(value?: ServiceQuery | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Limit': value['limit'],
        'Offset': value['offset'],
        'Operation': ServiceOperationTypeToJSON(value['operation']),
        'ResourcePolicyQuery': ServiceResourcePolicyQueryToJSON(value['resourcePolicyQuery']),
        'SortDesc': value['sortDesc'],
        'SortField': value['sortField'],
        'SubQueries': value['subQueries'] == null ? undefined : ((value['subQueries'] as Array<any>).map(ProtobufAnyToJSON)),
        'groupBy': value['groupBy'],
    };
}

